eureka.client.service-url.defaultZone=http://172.16.176.102:8761/eureka/
eureka.instance.lease-renewal-interval-in-seconds=6
eureka.instance.lease-expiration-duration-in-seconds=12
server.context-path=/wsbq
spring.application.name=nettysocketioSystem
server.port=8060
feign.hystrix.enabled=true

#mybatis
mybatis.mapper-locations=classpath:mapping/*.xml
mybatis.type-aliases-package=com.thunisoft.wsbq.po
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql
#server.session.timeout=10
#h5修改即生效
spring.thymeleaf.cache=false
spring.cloud.config.server.jdbc=true
#关闭activiti自动部署扫描
spring.activiti.check-process-definitions=true
#流程引擎
process.key.oaleave=xcasedemo

#常量定义
date.format.standard=yyyy-MM-dd hh:MM:ss

#数据库
spring.datasource.p3.url=jdbc:mysql://172.16.31.43:3306/rbac?useUnicode=true&characterEncoding=UTF-8&useSSL=false
spring.datasource.p3.username=liuxing
spring.datasource.p3.password=Liuxing009!
spring.datasource.p3.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.p3.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.p3.initialSize=20
spring.datasource.p3.minIdle=20
spring.datasource.p3.maxActive=1000
spring.datasource.p3.maxWait=60000
spring.datasource.p3.minEvictableIdleTimeMillis=300000
spring.datasource.p3.validationQuery=select 'x'
spring.datasource.p3.testWhileIdle=true
spring.datasource.p3.testOnBorrow=true
spring.datasource.p3.testOnReturn=true
spring.datasource.p3.poolPreparedStatements=true
spring.datasource.p3.maxPoolPreparedStatementPerConnectionSize=100
spring.datasource.p3.filters=stat,log4j
spring.datasource.p3.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=2000
#============================================================================
# netty socket io setting
#============================================================================
# host在本地测试可以设置为localhost或者本机IP，在Linux服务器跑可换成服务器IP
socketio.host=test.huayubenji.com
socketio.port=9099
# 设置最大每帧处理数据的长度，防止他人利用大数据来攻击服务器
socketio.maxFramePayloadLength=1048576
# 设置http交互最大内容长度
socketio.maxHttpContentLength=1048576
# socket连接数大小（如只监听一个端口boss线程组为1即可）
socketio.bossCount=1
socketio.workCount=100
socketio.allowCustomRequests=true
# 协议升级超时时间（毫秒），默认10秒。HTTP握手升级为ws协议超时时间
socketio.upgradeTimeout=20000
# Ping消息超时时间（毫秒），默认60秒，这个时间间隔内没有接收到心跳消息就会发送超时事件
socketio.pingTimeout=120000
# Ping消息间隔（毫秒），默认25秒。客户端向服务器发送一条心跳消息间隔
socketio.pingInterval=25000
redis.address=redis://172.16.31.43:6379